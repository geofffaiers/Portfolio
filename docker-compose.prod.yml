services:
  mysql-db:
    image: mysql:latest
    container_name: portfolio-mysql-db
    env_file: 
      - .env
    ports:
      - ${MYSQL_PORT}:${MYSQL_PORT}
    restart: always
    volumes:
      - ./mysql-db:/docker-entrypoint-initdb.d
      - mysql-data:/var/lib/mysql
    entrypoint: /docker-entrypoint-initdb.d/run.sh
    healthcheck:
      test: ["CMD-SHELL", "mysql -p${MYSQL_ROOT_PASSWORD} -e 'select 1'"]
      interval: 5s
      retries: 50

  api:
    image: gfaiers/portfolio-api:latest
    container_name: portfolio-api
    env_file:
      - .env
    depends_on:
      mysql-db:
        condition: service_healthy
    ports:
      - ${API_PORT}:${API_PORT}
    restart: always

  frontend:
    image: gfaiers/portfolio-frontend:latest
    container_name: portfolio-frontend
    depends_on:
      api:
        condition: service_started
    ports:
      - ${CLIENT_PORT}:${CLIENT_PORT}
    restart: always

  nginx:
    image: nginx:latest
    container_name: portfolio-nginx
    ports:
      - 80:80
      - 443:443
      - 443:443/udp
    volumes:
      - ./nginx.prod.conf:/etc/nginx/nginx.conf
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/lib/letsencrypt:/var/lib/letsencrypt
      - ./self-signed:/etc/nginx/ssl
      - /var/www/certbot:/var/www/certbot
    depends_on:
      - api
      - frontend
    restart: always
      
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/lib/letsencrypt:/var/lib/letsencrypt
      - ./nginx.prod.conf:/etc/nginx/nginx.conf
      - /var/www/certbot:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot certonly --webroot -w /var/www/certbot --email ${EMAIL} --agree-tos --no-eff-email -d gfaiers.com -d www.gfaiers.com --deploy-hook \"docker exec portfolio-nginx nginx -s reload\"; sleep 12h & wait $${!}; done;'"
    restart: unless-stopped

volumes:
  mysql-data:
