services:
  mysql-db:
    image: mysql:8.1
    container_name: portfolio-mysql-db
    env_file:
      - .env
    ports:
      - ${MYSQL_PORT}:${MYSQL_PORT}
    restart: always
    volumes:
      - ./mysql-db:/docker-entrypoint-initdb.d/:ro
      - portfolio-mysql-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "--password=$$MYSQL_ROOT_PASSWORD"]
      interval: 30s
      retries: 3
      timeout: 10s
      start_period: 40s

  flyway:
    image: flyway/flyway:11.10.0
    container_name: portfolio-flyway
    env_file:
      - .env
    depends_on:
      mysql-db:
        condition: service_healthy
    volumes:
      - ./migrations:/flyway/sql:ro
      - ./flyway/conf:/flyway/conf:ro
    command: [
      "-url=jdbc:mysql://mysql-db:${MYSQL_PORT}/${MYSQL_DATABASE}?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC",
      "-user=${MYSQL_ROOT_USER}",
      "-password=${MYSQL_ROOT_PASSWORD}",
      "-connectRetries=60",
      "migrate"
    ]
    restart: "no"

  api:
    image: gfaiers/portfolio-api:latest
    container_name: portfolio-api
    env_file:
      - .env
    depends_on:
      mysql-db:
        condition: service_healthy
      flyway:
        condition: service_completed_successfully
    ports:
      - ${API_PORT}:${API_PORT}
    restart: always

  frontend:
    image: gfaiers/portfolio-frontend:latest
    container_name: portfolio-frontend
    env_file:
      - .env
    depends_on:
      api:
        condition: service_started
    ports:
      - ${CLIENT_PORT}:${CLIENT_PORT}
    restart: always

  nginx:
    image: nginx:latest
    container_name: portfolio-nginx
    ports:
      - 80:80
      - 443:443
      - 443:443/udp
    volumes:
      - ./nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - letsencrypt-data:/etc/letsencrypt:ro
      - nginx-logs:/var/log/nginx
      - /var/www/certbot:/var/www/certbot:ro
    depends_on:
      - api
      - frontend
    restart: always
      
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - letsencrypt-data:/etc/letsencrypt
      - /var/www/certbot:/var/www/certbot
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /usr/bin/docker:/usr/bin/docker:ro
    entrypoint: >
      /bin/sh -c 'trap exit TERM;
      while :; do
         certbot certonly --webroot -w /var/www/certbot --email ${EMAIL} --agree-tos --no-eff-email -d gfaiers.com -d www.gfaiers.com --deploy-hook "docker exec portfolio-nginx nginx -s reload" || true;
         sleep 12h & wait $${!};
      done;'
    restart: unless-stopped

volumes:
  portfolio-mysql-data:
    name: portfolio_mysql_data
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/portfolio/mysql-data

  letsencrypt-data:
    name: portfolio_letsencrypt
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/portfolio/ssl

  nginx-logs:
    name: portfolio_nginx_logs  
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /var/log/portfolio
