services:
  mysql-db:
    image: mysql:latest
    container_name: portfolio-mysql-db
    env_file: 
      - .env
    ports:
      - ${MYSQL_PORT}:${MYSQL_PORT}
    restart: always
    volumes:
      - ./mysql-db:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "mysql -p${MYSQL_ROOT_PASSWORD} -e 'select 1'"]
      interval: 5s
      retries: 50

  api:
    image: gfaiers/portfolio-api:latest
    container_name: portfolio-api
    env_file:
      - .env
    depends_on:
      mysql-db:
        condition: service_healthy
    ports:
      - ${API_PORT}:${API_PORT}
    restart: always

  frontend:
    image: gfaiers/portfolio-frontend:latest
    container_name: portfolio-frontend
    depends_on:
      api:
        condition: service_started
    ports:
      - ${CLIENT_PORT}:${CLIENT_PORT}
    restart: always

  nginx:
    image: nginx:latest
    container_name: portfolio-nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /var/lib/letsencrypt:/var/lib/letsencrypt:ro
    depends_on:
      - api
      - frontend
    restart: always
      
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:ro
      - /var/lib/letsencrypt:/var/lib/letsencrypt:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    restart: always
