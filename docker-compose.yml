services:
  mysql-db:
    image: mysql:latest
    container_name: portfolio-mysql-db
    env_file: 
      - .env.development
    ports:
      - ${MYSQL_PORT}:${MYSQL_PORT}
    restart: unless-stopped
    volumes:
      - ./mysql-db:/docker-entrypoint-initdb.d
      - mysql-data:/var/lib/mysql
    entrypoint: /docker-entrypoint-initdb.d/run.sh
    healthcheck:
      test: ["CMD-SHELL", "mysql -p${MYSQL_ROOT_PASSWORD} -e 'select 1'"]
      interval: 5s
      retries: 50

  api:
    build: ./api
    container_name: portfolio-api
    env_file:
      - .env.development
    depends_on:
      mysql-db:
        condition: service_healthy
    volumes:
      - /usr/src/app/node_modules
      - ./api:/usr/src/app:cached
    ports:
      - ${STAGING_API_PORT}:${STAGING_API_PORT}
    restart: unless-stopped
    command: npm run staging

  frontend:
    build: ./frontend
    container_name: portfolio-frontend
    depends_on:
      api:
        condition: service_started
    volumes:
      - /usr/src/app/node_modules
      - ./frontend:/app:cached
    ports:
      - ${STAGING_CLIENT_PORT}:${STAGING_CLIENT_PORT}
    restart: unless-stopped
    command: npm run staging

  nginx:
    image: nginx:latest
    container_name: portfolio-nginx
    ports:
      - 80:80
    volumes:
      - ./nginx.dev.conf:/etc/nginx/nginx.conf
    depends_on:
      - api
      - frontend
    restart: unless-stopped

volumes:
  mysql-data:
